name: CI
on:
  push:
    branches: [ main ]

jobs:
  generate-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Github Tag Bump
        id: tab_bump
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.NUGET_API_KEY }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: patch
    outputs:
      new_version: ${{ steps.tab_bump.outputs.new_tag }}

  package-and-publish-contracts:
    runs-on: ubuntu-latest
    needs: generate-version
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Pack and Publish
        run: |
            mkdir -p packages
            for proj in $(find . -name "*.csproj"); do
                echo "Building $proj"
                dotnet build "$proj" --configuration Release

                project_name=$(basename "$proj" .csproj)
                package_version=${{ needs.generate-version.outputs.new_version }}
                package_id="${project_name} v${package_version}"

                echo "Packing $proj with PackageId: $package_id"
                dotnet pack "$proj" --configuration Release \
                  -p:PackageVersion=${package_version} \
                  -p:PackageId="${package_id}" \
                  -p:RepositoryUrl=https://github.com/${{ github.repository_owner }}/${project_name} \
                  -o packages

                for nupkg in packages/*.nupkg; do
                    if [ -f "$nupkg" ]; then
                        echo "Publishing $nupkg"
                        dotnet nuget push "$nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate --source https://api.nuget.org/v3/index.json
                    else
                        echo "No .nupkg file found for $proj"
                    fi
                done
            done

